name: Manual Docker Build & Push with Cache
run-name: Build ${{ github.event.inputs.docker_tag }}

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Which branch to build from'
        required: true
        default: 'main'
      docker_tag:
        description: 'Docker tag to apply (e.g. v1.0.0, staging, my-feature-build)'
        required: true

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 1) Check out the specified branch
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      # 2) Set up Docker Buildx (enables BuildKit + caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3) Log in to Docker Hub using repository secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4) Build & Push, with registry-backed cache
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile

          # Tell Buildx to pull cache layers from this specific tag
          cache-from: type=registry,ref=your-dockerhub-username/your-repo:cache

          # After building, push updated cache layers back here
          cache-to: type=registry,ref=your-dockerhub-username/your-repo:cache,mode=max

          push: true

          # Tag the built image exactly as the user entered
          tags: |
            mmaksymko/news-inspector:${{ github.event.inputs.docker_tag }}
